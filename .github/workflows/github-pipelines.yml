name: GitLab Flow CI/CD

on:
  push:
    branches:
      - main      
      - staging   
  pull_request:
    branches:
      - main      

env:
  GO_VERSION: 1.24.0
  DOCKER_IMAGE: RuslanM36/lastone
  DOCKER_TAG: latest

jobs:
  
  test:
    name: Run Tests
    runs-on: ubuntu-latest  
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
    
    - name: Install dependencies
      run: go mod tidy
      
    - name: Run tests
      run: go test -v ./...

  
  build:
    name: Build Docker Image
    needs: test
    runs-on: self-hosted  
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging'
    steps:
    - uses: actions/checkout@v4
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        push: true
        tags: ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
        platforms: linux/amd64  

 
  deploy:
    name: Deploy
    needs: build
    runs-on: self-hosted
    strategy:
      matrix:
        environment: 
          - ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
    steps:
    - name: Stop old container
      run: |
        docker stop $(docker ps -q --filter ancestor=${{ env.DOCKER_IMAGE }}) || true
        docker rm $(docker ps -aq --filter ancestor=${{ env.DOCKER_IMAGE }}) || true
    
    - name: Run new container
      run: |
        docker pull ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
        docker run -d \
          -p 88:8888 \
          --name app-${{ matrix.environment }} \
          ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
    
    - name: Verify deployment
      run: |
        curl -sSf http://localhost:88/healthcheck || exit 1